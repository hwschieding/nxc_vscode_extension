{
    "block-comment":{
        "prefix":"/*",
        "body":["$BLOCK_COMMENT_START","\t$0","$BLOCK_COMMENT_END"],
        "description":"Block comment"
    },
    "main":{
        "prefix":["main()"],
        "body":["task main() {", "\t$0", "}"],
        "description": ["task main() {", "\tbody", "]"]
    },
    "for":{
        "prefix":["for()"],
        "body":["for(int ${1:i} = 0; ${1:i} < $2; ${1:i}++) {", "\t$0", "}"],
        "description": ["for(statement1; bool condition; statement2) {", "\tbody", "}"]
    },
    "while":{
        "prefix":"while()",
        "body":["while($1)$0"],
        "description": ["while(bool condition) {", "\tbody", "}"]
    },
    "repeat":{
        "prefix":["repeat()"],
        "body":["repeat($1) {", "\t$0", "}"],
        "description":["repeat(int) {", "\tbody", "}"]
    },
    "do":{
        "prefix":"do",
        "body":["do {", "\t$1", "}$0"],
        "description": ["do {", "\tbody", "} while(bool condition)"]
    },
    "if":{
        "prefix":["if()"],
        "body":["if($1)$0"],
        "description": ["if(bool condition) {", "\tbody", "}"]
    },
    "else":{
        "prefix":["else"],
        "body":"else",
        "description":["else {", "\tbody", "}"]
    },
    "if-else":{
        "prefix":"if-else",
        "body":["if($1) {", "\t$2", "} else {", "\t$0", "}"],
        "description":["if(bool condition) {", "\tbody", "} else {", "\tbody", "}"]
    },
    "switch":{
        "prefix":"switch()",
        "body":["switch($1) {", "\t$0", "}"],
        "description":["switch(expression) {", "\tbody", "}"]
    },
    "case":{
        "prefix":"case",
        "body":["case:", "\t$0"],
        "description":["case:", "\t//do something", "\tbreak;"]
    },
    "default":{
        "prefix":"default",
        "body":["default:", "\t$0"],
        "description":["default:", "\t//do something", "\tbreak;"]
    },
    "break":{
        "prefix":"break",
        "body":"break",
        "description":"break;"
    },
    "continue":{
        "prefix":"continue",
        "body":"continue",
        "description":"continue;"
    },
    "goto":{
        "prefix":"goto",
        "body":"goto $0",
        "description":"goto [label]"
    },
    "until":{
        "prefix":"until()",
        "body":"until($1)$0",
        "description":"until(bool condition)"
    },
    "asm":{
        "prefix":"asm",
        "body":["asm {", "\t$0", "}"],
        "description":["asm {", "\tbody //NBC assembly language", "}"]
    },
    "start":{
        "prefix":"start",
        "body":"start",
        "description":"start [task_name];"
    },
    "stop":{
        "prefix":"stop",
        "body":"stop",
        "description":"stop [task_name]"
    },
    "priority":{
        "prefix":"priority",
        "body":"priority",
        "description":"priority [task_name]"
    },
    "return":{
        "prefix":"return",
        "body":"return",
        "description":"return [expression]"
    },
    "true":{
        "prefix":"true",
        "body":"true",
        "description":"Represents always true condition"
    },
    "false":{
        "prefix":"false",
        "body":"false",
        "description":"Represents always false condition"
    },
    "#include":{
        "prefix":"#include",
        "body":"#include \"$1\"$0",
        "description":"#include \"[filename]\""
    },
    "#define":{
        "prefix":"#define",
        "body":"#define",
        "description": "#define [symbol]"
    },
    "#import":{
        "prefix":"#import",
        "body":"#import \"$1\" $0",
        "description":"#import \"[filename]\" [symbol]"
    },
    "#download":{
        "prefix":"#download",
        "body":"#download \"$1\"$0",
        "description":"#download \"[filename]\""
    },
    "#ifdef":{
        "prefix":"#ifdef",
        "body":"#ifdef",
        "description":"#ifdef [symbol]"
    },
    "#ifndef":{
        "prefix":"#ifndef",
        "body":"#ifndef",
        "description":"#ifndef [symbol]"
    },
    "#else":{
        "prefix":"#else",
        "body":"#else",
        "description":["#else","//switch from compiling to not compiling & vice versa"]
    },
    "#endif":{
        "prefix":"#endif",
        "body":"#endif",
        "description":["#endif","//return to previous compiling state"]
    },
    "#if":{
        "prefix":"#if",
        "body":"#if",
        "description":["#if [condition]"]
    },
    "#elif":{
        "prefix":"#elif",
        "body":"#elif",
        "description":["#elif [condition]"]
    },
    "void":{
        "prefix":"void",
        "body":"void",
        "description":"void [name]"
    },
    "sub":{
        "prefix":"sub",
        "body":"sub",
        "description":"sub [name]"
    },
    "bool":{
        "prefix":"bool",
        "body":"bool",
        "description":"bool [name]"
    },
    "byte":{
        "prefix":"byte",
        "body":"byte",
        "description":"byte [name]"
    },
    "char":{
        "prefix":"char",
        "body":"char",
        "description":"char [name]"
    },
    "int":{
        "prefix":"int",
        "body":"int",
        "description":"int [name]"
    },
    "short":{
        "prefix":"short",
        "body":"short",
        "description":"short [name]"
    },
    "long":{
        "prefix":"long",
        "body":"long",
        "description":"long [name]"
    },
    "float":{
        "prefix":"float",
        "body":"float",
        "description":"float [name]"
    },
    "mutex":{
        "prefix":"mutex",
        "body":"mutex",
        "description":["mutex [name]","/*","\t32-bit value","\tused to synchronize access to resources shared across multiple threads","*/"]
    },
    "string":{
        "prefix":"string",
        "body":"string",
        "description":"string [name]"
    },
    "enum":{
        "prefix":"enum",
        "body":"enum",
        "description":"enum [name]"
    },
    "typedef":{
        "prefix":"typedef",
        "body":"typedef",
        "description":"typedef [type] [name]"
    },
    "struct":{
        "prefix":"struct",
        "body":"struct",
        "description":"struct [name]"
    },
    "unsigned":{
        "prefix":"unsigned",
        "body":"unsigned",
        "description":"unsigned [declaration]"
    },
    "static":{
        "prefix":"static",
        "body":"static",
        "description":"static [declaration]"
    },
    "inline":{
        "prefix":"inline",
        "body":"inline",
        "description":"inline [declaration]"
    },
    "safecall":{
        "prefix":"safecall",
        "body":"safecall",
        "description":"safecall [declaration]"
    },
    "const":{
        "prefix":"const",
        "body":"const",
        "description":"const [declaration]"
    },
    "task":{
        "prefix":"task",
        "body":["task $1() {", "\t$0", "}"],
        "description":["task [name]() {", "\tbody", "}"]
    },
    "S1":{"prefix":"S1","body":"S1","description":"#define S1 0"},
    "S2":{"prefix":"S2","body":"S2","description":"#define S2 1"},
    "S3":{"prefix":"S3","body":"S3","description":"#define S3 2"},
    "S4":{"prefix":"S4","body":"S4","description":"#define S4 3"},
    "SENSOR_TYPE_NONE":{"prefix":"SENSOR_TYPE_NONE","body":"SENSOR_TYPE_NONE","description":"#define SENSOR_TYPE_NONE IN_TYPE_NO_SENSOR"},
    "SENSOR_TYPE_TOUCH":{"prefix":"SENSOR_TYPE_TOUCH","body":"SENSOR_TYPE_TOUCH","description":"#define SENSOR_TYPE_TOUCH IN_TYPE_SWITCH"},
    "SENSOR_TYPE_TEMPERATURE":{"prefix":"SENSOR_TYPE_TEMPERATURE","body":"SENSOR_TYPE_TEMPERATURE","description":"#define SENSOR_TYPE_TEMPERATURE IN_TYPE_TEMPERATURE"},
    "SENSOR_TYPE_LIGHT":{"prefix":"SENSOR_TYPE_LIGHT","body":"SENSOR_TYPE_LIGHT","description":"#define SENSOR_TYPE_LIGHT IN_TYPE_REFLECTION"},
    "SENSOR_TYPE_ROTATION":{"prefix":"SENSOR_TYPE_ROTATION","body":"SENSOR_TYPE_ROTATION","description":"#define SENSOR_TYPE_ROTATION IN_TYPE_ANGLE"},
    "SENSOR_TYPE_LIGHT_ACTIVE":{"prefix":"SENSOR_TYPE_LIGHT_ACTIVE","body":"SENSOR_TYPE_LIGHT_ACTIVE","description":"#define SENSOR_TYPE_LIGHT_ACTIVE IN_TYPE_LIGHT_ACTIVE"},
    "SENSOR_TYPE_LIGHT_INACTIVE":{"prefix":"SENSOR_TYPE_LIGHT_INACTIVE","body":"SENSOR_TYPE_LIGHT_INACTIVE","description":"#define SENSOR_TYPE_LIGHT_INACTIVE IN_TYPE_LIGHT_INACTIVE"},
    "SENSOR_TYPE_SOUND_DB":{"prefix":"SENSOR_TYPE_SOUND_DB","body":"SENSOR_TYPE_SOUND_DB","description":"#define SENSOR_TYPE_SOUND_DB IN_TYPE_SOUND_DB"},
    "SENSOR_TYPE_SOUND_DBA":{"prefix":"SENSOR_TYPE_SOUND_DBA","body":"SENSOR_TYPE_SOUND_DBA","description":"#define SENSOR_TYPE_SOUND_DBA IN_TYPE_SOUND_DBA"},
    "SENSOR_TYPE_CUSTOM":{"prefix":"SENSOR_TYPE_CUSTOM","body":"SENSOR_TYPE_CUSTOM","description":"#define SENSOR_TYPE_CUSTOM IN_TYPE_CUSTOM"},
    "SENSOR_TYPE_LOWSPEED":{"prefix":"SENSOR_TYPE_LOWSPEED","body":"SENSOR_TYPE_LOWSPEED","description":"#define SENSOR_TYPE_LOWSPEED IN_TYPE_LOWSPEED"},
    "SENSOR_TYPE_LOWSPEED_9V":{"prefix":"SENSOR_TYPE_LOWSPEED_9V","body":"SENSOR_TYPE_LOWSPEED_9V","description":"#define SENSOR_TYPE_LOWSPEED_9V IN_TYPE_LOWSPEED_9V"},
    "SENSOR_TYPE_HIGHSPEED":{"prefix":"SENSOR_TYPE_HIGHSPEED","body":"SENSOR_TYPE_HIGHSPEED","description":"#define SENSOR_TYPE_HIGHSPEED IN_TYPE_HISPEED"},
    "SENSOR_TYPE_COLORFULL":{"prefix":"SENSOR_TYPE_COLORFULL","body":"SENSOR_TYPE_COLORFULL","description":"#define SENSOR_TYPE_COLORFULL IN_TYPE_COLORFULL"},
    "SENSOR_TYPE_COLORRED":{"prefix":"SENSOR_TYPE_COLORRED","body":"SENSOR_TYPE_COLORRED","description":"#define SENSOR_TYPE_COLORRED IN_TYPE_COLORRED"},
    "SENSOR_TYPE_COLORGREEN":{"prefix":"SENSOR_TYPE_COLORGREEN","body":"SENSOR_TYPE_COLORGREEN","description":"#define SENSOR_TYPE_COLORGREEN IN_TYPE_COLORGREEN"},
    "SENSOR_TYPE_COLORBLUE":{"prefix":"SENSOR_TYPE_COLORBLUE","body":"SENSOR_TYPE_COLORBLUE","description":"#define SENSOR_TYPE_COLORBLUE IN_TYPE_COLORBLUE"},
    "SENSOR_TYPE_COLORNONE":{"prefix":"SENSOR_TYPE_COLORNONE","body":"SENSOR_TYPE_COLORNONE","description":"#define SENSOR_TYPE_COLORNONE IN_TYPE_COLORNONE"},
    "SENSOR_MODE_RAW":{"prefix":"SENSOR_MODE_RAW","body":"SENSOR_MODE_RAW","description":"define SENSOR_MODE_RAW IN_MODE_RAW"},
    "SENSOR_MODE_BOOL":{"prefix":"SENSOR_MODE_BOOL","body":"SENSOR_MODE_BOOL","description":"define SENSOR_MODE_BOOL IN_MODE_BOOLEAN"},
    "SENSOR_MODE_EDGE":{"prefix":"SENSOR_MODE_EDGE","body":"SENSOR_MODE_EDGE","description":"define SENSOR_MODE_EDGE IN_MODE_TRANSITIONCNT"},
    "SENSOR_MODE_PULSE":{"prefix":"SENSOR_MODE_PULSE","body":"SENSOR_MODE_PULSE","description":"define SENSOR_MODE_PULSE IN_MODE_PERIODCOUNTER"},
    "SENSOR_MODE_PERCENT":{"prefix":"SENSOR_MODE_PERCENT","body":"SENSOR_MODE_PERCENT","description":"define SENSOR_MODE_PERCENT IN_MODE_PCTFULLSCALE"},
    "SENSOR_MODE_CELSIUS":{"prefix":"SENSOR_MODE_CELSIUS","body":"SENSOR_MODE_CELSIUS","description":"define SENSOR_MODE_CELSIUS IN_MODE_CELSIUS"},
    "SENSOR_MODE_FAHRENHEIT":{"prefix":"SENSOR_MODE_FAHRENHEIT","body":"SENSOR_MODE_FAHRENHEIT","description":"define SENSOR_MODE_FAHRENHEIT IN_MODE_FAHRENHEIT"},
    "SENSOR_MODE_ROTATION":{"prefix":"SENSOR_MODE_ROTATION","body":"SENSOR_MODE_ROTATION","description":"define SENSOR_MODE_ROTATION IN_MODE_ANGLESTEP"},
    "_SENSOR_CFG":{"prefix":"_SENSOR_CFG","body":"_SENSOR_CFG","description":"#define _SENSOR_CFG(_type, _mode) (((_type)<<8)+(_mode))"},
    "SENSOR_TOUCH":{"prefix":"SENSOR_TOUCH","body":"SENSOR_TOUCH","description":"_SENSOR_CFG(SENSOR_TYPE_TOUCH,SENSOR_MODE_BOOL)"},
    "SENSOR_LIGHT":{"prefix":"SENSOR_LIGHT","body":"SENSOR_LIGHT","description":"_SENSOR_CFG(SENSOR_TYPE_LIGHT,SENSOR_MODE_PERCENT)"},
    "SENSOR_ROTATION":{"prefix":"SENSOR_ROTATION","body":"SENSOR_ROTATION","description":"_SENSOR_CFG(SENSOR_TYPE_ROTATION,SENSOR_MODE_ROTATION)"},
    "SENSOR_CELCIUS":{"prefix":"SENSOR_CELCIUS","body":"SENSOR_CELCIUS","description":"_SENSOR_CFG(SENSOR_TYPE_TEMPERATURE,SENSOR_MODE_CELCIUS)"},
    "SENSOR_FAHRENHEIT":{"prefix":"SENSOR_FAHRENHEIT","body":"SENSOR_FAHRENHEIT","description":"_SENSOR_CFG(SENSOR_TYPE_TEMPERATURE,SENSOR_MODE_FAHRENHEIT)"},
    "SENSOR_PULSE":{"prefix":"SENSOR_PULSE","body":"SENSOR_PULSE","description":"_SENSOR_CFG(SENSOR_TYPE_TOUCH,SENSOR_MODE_PULSE)"},
    "SENSOR_EDGE":{"prefix":"SENSOR_EDGE","body":"SENSOR_EDGE","description":"_SENSOR_CFG(SENSOR_TYPE_TOUCH,SENSOR_MODE_EDGE)"},
    "SENSOR_NXTLIGHT":{"prefix":"SENSOR_NXTLIGHT","body":"SENSOR_NXTLIGHT","description":"_SENSOR_CFG(SENSOR_TYPE_LIGHT_ACTIVE,SENSOR_MODE_PERCENT)"},
    "SENSOR_SOUND":{"prefix":"SENSOR_SOUND","body":"SENSOR_SOUND","description":"_SENSOR_CFG(SENSOR_TYPE_LIGHT_SOUND,SENSOR_MODE_PERCENT)"},
    "OUT_A":{"prefix":"OUT_A","body":"OUT_A","description":"#define OUT_A 0x00"},
    "OUT_B":{"prefix":"OUT_B","body":"OUT_B","description":"#define OUT_B 0x01"},
    "OUT_C":{"prefix":"OUT_C","body":"OUT_C","description":"#define OUT_C 0x02"},
    "OUT_AB":{"prefix":"OUT_AB","body":"OUT_AB","description":"#define OUT_AB 0x03"},
    "OUT_AC":{"prefix":"OUT_AC","body":"OUT_AC","description":"#define OUT_AC 0x04"},
    "OUT_BC":{"prefix":"OUT_BC","body":"OUT_BC","description":"#define OUT_BC 0x05"},
    "OUT_ABC":{"prefix":"OUT_ABC","body":"OUT_ABC","description":"#define OUT_ABC 0x06"},
    "OUT_MODE_COAST":{"prefix":"OUT_MODE_COAST","body":"OUT_MODE_COAST","description":"#define OUT_MODE_COAST 0x00"},
    "OUT_MODE_MOTORON":{"prefix":"OUT_MODE_MOTORON","body":"OUT_MODE_MOTORON","description":"#define OUT_MODE_MOTORON 0x01"},
    "OUT_MODE_BRAKE":{"prefix":"OUT_MODE_BRAKE","body":"OUT_MODE_BRAKE","description":"#define OUT_MODE_BRAKE 0x02"},
    "OUT_MODE_REGULATED":{"prefix":"OUT_MODE_REGULATED","body":"OUT_MODE_REGULATED","description":"#define OUT_MODE_REGULATED 0x04"},
    "OUT_MODE_REGMETHOD":{"prefix":"OUT_MODE_REGMETHOD","body":"OUT_MODE_REGMETHOD","description":"#define OUT_MODE_REGMETHOD 0xF0"},
    "OUT_OPTION_HOLDATLIMIT":{"prefix": "OUT_OPTION_HOLDATLIMIT","body": "OUT_OPTION_HOLDATLIMIT","description": "#define OUT_OPTION_HOLDATLIMIT 0x10"},
    "OUT_OPTION_RAMPDOWNTOLIMIT":{"prefix": "OUT_OPTION_RAMPDOWNTOLIMIT","body": "OUT_OPTION_RAMPDOWNTOLIMIT","description": "#define OUT_OPTION_RAMPDOWNTOLIMIT 0x20"},
    "OUT_REGOPTION_NO_SATURATION":{"prefix": "OUT_REGOPTION_NO_SATURATION","body": "OUT_REGOPTION_NO_SATURATION","description": "#define OUT_REGOPTION_NO_SATURATION 0x01"},
    "OUT_RUNSTATE_IDLE":{"prefix": "OUT_RUNSTATE_IDLE","body": "OUT_RUNSTATE_IDLE","description": "#define OUT_RUNSTATE_IDLE 0x00"},
    "OUT_RUNSTATE_RAMPUP":{"prefix": "OUT_RUNSTATE_RAMPUP","body": "OUT_RUNSTATE_RAMPUP","description": "#define OUT_RUNSTATE_RAMPUP 0x10"},
    "OUT_RUNSTATE_RUNNING":{"prefix": "OUT_RUNSTATE_RUNNING","body": "OUT_RUNSTATE_RUNNING","description": "#define OUT_RUNSTATE_RUNNING 0x20"},
    "OUT_RUNSTATE_RAMPDOWN":{"prefix": "OUT_RUNSTATE_RAMPDOWN","body": "OUT_RUNSTATE_RAMPDOWN","description": "#define OUT_RUNSTATE_RAMPDOWN 0x40"},
    "OUT_RUNSTATE_HOLD":{"prefix": "OUT_RUNSTATE_HOLD","body": "OUT_RUNSTATE_HOLD","description": "#define OUT_RUNSTATE_HOLD 0x60"},
    "OUT_REGMODE_IDLE":{"prefix": "OUT_REGMODE_IDLE","body": "OUT_REGMODE_IDLE","description": "#define OUT_REGMODE_IDLE 0"},
    "OUT_REGMODE_SPEED":{"prefix": "OUT_REGMODE_SPEED","body": "OUT_REGMODE_SPEED","description": "#define OUT_REGMODE_SPEED 1"},
    "OUT_REGMODE_SYNC":{"prefix": "OUT_REGMODE_SYNC","body": "OUT_REGMODE_SYNC","description": "#define OUT_REGMODE_SYNC 2"},
    "OUT_REGMODE_POS":{"prefix": "OUT_REGMODE_POS","body": "OUT_REGMODE_POS","description": "#define OUT_REGMODE_POS 4"},
    "UF_UPDATE_MODE":{"prefix": "UF_UPDATE_MODE","body": "UF_UPDATE_MODE","description": "#define UF_UPDATE_MODE 0x01"},
    "UF_UPDATE_SPEED":{"prefix": "UF_UPDATE_SPEED","body": "UF_UPDATE_SPEED","description": "#define UF_UPDATE_SPEED 0x02"},
    "UF_UPDATE_TACHO_LIMIT":{"prefix": "UF_UPDATE_TACHO_LIMIT","body": "UF_UPDATE_TACHO_LIMIT","description": "#define UF_UPDATE_TACHO_LIMIT 0x04"},
    "UF_UPDATE_RESET_COUNT":{"prefix": "UF_UPDATE_RESET_COUNT","body": "UF_UPDATE_RESET_COUNT","description": "#define UF_UPDATE_RESET_COUNT 0x08"},
    "UF_UPDATE_PID_VALUES":{"prefix": "UF_UPDATE_PID_VALUES","body": "UF_UPDATE_PID_VALUES","description": "#define UF_UPDATE_PID_VALUES 0x10"},
    "UF_UPDATE_RESET_BLOCK_COUNT":{"prefix": "UF_UPDATE_RESET_BLOCK_COUNT","body": "UF_UPDATE_RESET_BLOCK_COUNT","description": "#define UF_UPDATE_RESET_BLOCK_COUNT 0x20"},
    "UF_UPDATE_RESET_ROTATION_COUNT":{"prefix": "UF_UPDATE_RESET_ROTATION_COUNT","body": "UF_UPDATE_RESET_ROTATION_COUNT","description": "#define UF_UPDATE_RESET_ROTATION_COUNT 0x40"},
    "UF_PENDING_UPDATES":{"prefix": "UF_PENDING_UPDATES","body": "UF_PENDING_UPDATES","description": "#define UF_PENDING_UPDATES 0x80"}
}